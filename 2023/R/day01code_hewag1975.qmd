---
title: "Advent of code 2023, Day 1"
author: "Hendrik Wagenseil"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false

library(reticulate)

knitr::opts_knit$set(
  root.dir = '~/Documents/repos/github/adventofcode'
)

ifl = file.path(here::here(), "2023", "data", "day01input")
txt = readLines(ifl)
```


::: {.panel-tabset}

## Part I

Extract first and last digit from each element of a vector of strings and 
sum up. 

```{r}
head(txt, n = 12L)
```

::: {.panel-tabset}

#### R


```{r}
l = gregexpr("[[:digit:]]", text = txt) |> 
  lapply(FUN = range) 

mapply(
  \(t, f){
    paste0(
      substr(t, f[1], f[1])
      , substr(t, f[2], f[2])
    ) |> 
      as.numeric()
  }
  , t = txt
  , f = l
  , SIMPLIFY = FALSE
) |> 
  unname() |> 
  unlist() |> 
  sum(na.rm = TRUE)
```

#### Python

```{python}
```

:::


## Part II

Extract first and last digit and/or first and last written number from each 
element of a vector of strings and sum up. 

```{r}
head(txt, n = 12L)
```

::: {.panel-tabset}

#### R

```{r}
pat = c(
  "one", "two", "three"
  , "four", "five", "six"
  , "seven", "eight", "nine"
)

new = pat 
substr(
  new
  , start = 2
  , stop = 2
) = as.character(1:9)

txt_digits = Map(
  stringi::stri_replace_all_fixed
  , str = txt
  , pattern = list(pat)
  , replacement = list(new)
  , vectorize_all = FALSE
) |> 
  unlist() |> 
  unname()

l = gregexpr("[[:digit:]]", text = txt_digits) |> 
  lapply(FUN = range) 

mapply(
  \(t, f){
    paste0(
      substr(t, f[1], f[1])
      , substr(t, f[2], f[2])
    ) |> 
      as.numeric()
  }
  , t = txt_digits
  , f = l
  , SIMPLIFY = FALSE
) |> 
  unname() |> 
  unlist() |> 
  sum(na.rm = TRUE)
```

#### Python

```{python}
```

:::

:::
